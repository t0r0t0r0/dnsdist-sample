-----------------------------------------------------------------------------
-- Tuning Param
-----------------------------------------------------------------------------
setMaxUDPOutstanding(8192)
-- setTCPRecvTimeout(2)
-- setTCPSendTimeout(2)
-- setMaxTCPClientThreads(8)

-----------------------------------------------------------------------------
-- Default Server Policy
-----------------------------------------------------------------------------
-- setServerPolicy(leastOutstanding)

-----------------------------------------------------------------------------
-- LB
-----------------------------------------------------------------------------
-- setServerPolicy(roundrobin)

-----------------------------------------------------------------------------
-- Server List
-----------------------------------------------------------------------------
newServer {address="127.0.0.1:5300",name="BIND"}
newServer {address="127.0.0.1:5301",name="UNBOUND"}
newServer {address="127.0.0.1:5302",name="PowerDNS Rec"}
newServer {address="127.0.0.1:5303",name="PowerDNS Auth",pool="auth"}
newServer {address="127.0.0.1:5304",name="NSD",pool="auth"}
newServer {address="127.0.0.1:5305",name="UNBOUND2",pool="amp"}
newServer {address="8.8.8.8",name="google public DNS",qps=100,pool="google"}
newServer {address="8.8.4.4",name="google public DNS",qps=100,pool="google"}
newServer {address="208.67.222.222",name="OpenDNS",qps=100,pool="open"}
newServer {address="208.67.220.220",name="OpenDNS",qps=100,pool="open"}
newServer {address="199.85.126.10",name="NortonDNS",qps=100,pool="norton"}
newServer {address="199.85.127.10",name="NortonDNS",qps=100,pool="norton"}
newServer {address="77.88.8.8",name="YandexDNS",qps=100,pool="yandex"}
newServer {address="77.88.8.1",name="YandexDNS",qps=100,pool="yandex"}
newServer {address="180.76.76.76",name="BaiduDNS",qps=100,pool="baidu"}
newServer {address="114.114.114.114",name="BaiduDNS",qps=100,pool="baidu"}
newServer {address="8.26.56.26",name="ComodoDNS",qps=100,pool="comodo"}
newServer {address="8.20.247.20",name="ComodoDNS",qps=100,pool="comodo"}

-----------------------------------------------------------------------------
-- Management
-----------------------------------------------------------------------------
controlSocket("127.0.0.1")

-----------------------------------------------------------------------------
-- WebControll
-----------------------------------------------------------------------------
webserver("153.126.167.156:8083","dnsdist")

-----------------------------------------------------------------------------
-- PoolRule
-----------------------------------------------------------------------------
addPoolRule("yahoo.co.jp.","google")
addPoolRule("nicovideo.jp.","open")
addPoolRule("microsoft.com.","norton")
addPoolRule("baidu.com.","baidu")
addPoolRule("yahoo.com.","comodo")

warnlog(string.format("Script %s", "starting"))

-----------------------------------------------------------------------------
-- ACL
-----------------------------------------------------------------------------
addACL("153.126.167.156/32")


-----------------------------------------------------------------------------
-- RR
-----------------------------------------------------------------------------
-- counter=0
-- function RR(servers, remote, qname, qtype, dh)
--      counter=counter+1
--      return servers[1+(counter % #servers)]
-- end
-- setServerPolicyLua("RR", RR)

-----------------------------------------------------------------------------
-- SplitAuth
-----------------------------------------------------------------------------
-- function splitAuth(servers, remote, qname, qtype, dh)
--      if(dh:getRD() == false)
--      then
--              return leastOutstanding.policy(getPoolServers("auth"), remote, qname, qtype, dh)
--      else
--              return leastOutstanding.policy(servers, remote, qname, qtype, dh)
--      end
-- end
-- setServerPolicyLua("splitAuth", splitAuth)

-----------------------------------------------------------------------------
-- ChangePool
-----------------------------------------------------------------------------
function privateA(remote, qname, qtype, dh, len)
        return DNSAction.Pool, "google"
end
addLuaAction("10.0.0.0/8", privateA)

function privateB(remote, qname, qtype, dh, len)
        return DNSAction.Pool, "norton"
end
addLuaAction("172.16.0.0/12", privateB)

function privateC(remote, qname, qtype, dh, len)
        return DNSAction.Pool, "comodo"
end
addLuaAction("192.168.0.0/16", privateC)

-----------------------------------------------------------------------------
-- SplitAuth with roundrobin
-----------------------------------------------------------------------------
function splitAuthRR(servers, remote, qname, qtype, dh)
        if(dh:getRD() == false)
        then
                authlogging(remote, qname, qtype, dh, len)
                return roundrobin.policy(getPoolServers("auth"), remote, qname, qtype, dh)
        else
                -- cachelogging(remote, qname, qtype, dh, len)
                return roundrobin.policy(servers, remote, qname, qtype, dh)
        end
end
setServerPolicyLua("splitAuthRR", splitAuthRR)

-----------------------------------------------------------------------------
-- Logging
-----------------------------------------------------------------------------
function authlogging(remote, qname, qtype, dh, len)
        logging("AUTH",remote, qname, qtype, dh, len)
end

function cachelogging(remote, qname, qtype, dh, len)
        logging("CACHE",remote, qname, qtype, dh, len)
end

function amplogging(remote, qname, qtype, dh, len)
        logging("AMP",remote, qname, qtype, dh, len)
        return DNSAction.None, ""
end

function ddoslogging(remote, qname, qtype, dh, len)
        logging("DDOS",remote, qname, qtype, dh, len)
        return DNSAction.None, ""
end

function logging(logtype,remote, qname, qtype, dh, len)
        warnlog(string.format("TYPE:%s IP:%s QNAME:%s QTYPE:%s RD:%s CD:%s", logtype, remote:tostring(), qname:tostring(), qtype, tostring(dh:getRD()), tostring(dh:getCD())))
end

-----------------------------------------------------------------------------
-- AMP Drop
-----------------------------------------------------------------------------
addAction(AndRule{RegexRule("example.com$"),QTypeRule(255)}, DropAction())              -- DROP
addAction(AndRule{RegexRule("example.org$"),QTypeRule(255)}, NoRecurseAction())         -- NOERROR
-- addAction(AndRule{RegexRule("example.cn$"),QTypeRule(255)}, TCAction())              -- NOERROR
addLuaAction(AndRule{RegexRule("example.cn$"),QTypeRule(255)}, amplogging)              -- LOGGING

-----------------------------------------------------------------------------
-- Randum Drop
-----------------------------------------------------------------------------
addAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.drop.example.co.jp$"), DropAction())          -- DROP
addAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.norec.example.co.jp$"), NoRecurseAction())    -- NOERROR
addAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.tc.example.co.jp$"), TCAction())              -- NOERROR
addLuaAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.log.example.co.jp$"), ddoslogging)         -- LOGGING

-----------------------------------------------------------------------------
-- DomainBlock
-----------------------------------------------------------------------------
addDomainBlock("example.net")

-----------------------------------------------------------------------------
-- DropNetWork
-----------------------------------------------------------------------------
addAction("192.168.1.0/24",DropAction())
