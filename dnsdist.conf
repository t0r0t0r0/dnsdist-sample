-----------------------------------------------------------------------------
-- Tuning Param
-----------------------------------------------------------------------------
-- setMaxUDPOutstanding(8192)
-- setTCPRecvTimeout(2)
-- setTCPSendTimeout(2)
-- setMaxTCPClientThreads(1024)
-- setECSSourcePrefixV4(24)
-- setECSSourcePrefixV6(56)

-----------------------------------------------------------------------------
-- Default Server Policy
-----------------------------------------------------------------------------
-- setServerPolicy(leastOutstanding) -- Default
-- setServerPolicy(roundrobin)
-- setServerPolicy(firstAvailable)
-- setServerPolicy(wrandom)
-- setServerPolicy(whashed)

-----------------------------------------------------------------------------
-- Server List
-----------------------------------------------------------------------------
newServer {address="8.8.8.8",name="google public DNS",qps=100,pool="google"}
newServer {address="8.8.4.4",name="google public DNS",qps=100,pool="google"}
newServer {address="208.67.222.222",name="OpenDNS",qps=100,pool="open"}
newServer {address="208.67.220.220",name="OpenDNS",qps=100,pool="open"}
newServer {address="199.85.126.10",name="NortonDNS",qps=100,pool="norton"}
newServer {address="199.85.127.10",name="NortonDNS",qps=100,pool="norton"}
newServer {address="77.88.8.8",name="YandexDNS",qps=100,pool="yandex"}
newServer {address="77.88.8.1",name="YandexDNS",qps=100,pool="yandex"}
newServer {address="180.76.76.76",name="BaiduDNS",qps=100,pool="baidu"}
newServer {address="114.114.114.114",name="BaiduDNS",qps=100,pool="baidu"}
newServer {address="8.26.56.26",name="ComodoDNS",qps=100,pool="comodo"}
newServer {address="8.20.247.20",name="ComodoDNS",qps=100,pool="comodo"}
-- newServer {address="223.5.5.5",name="AliDNS",qps=100,pool="alidns"} -- UpDown many many
-- newServer {address="223.6.6.6",name="AliDNS",qps=100,pool="alidns"} -- UpDown many many

newServer {address="127.0.0.1:5300",name="BIND"}
newServer {address="127.0.0.1:5301",name="UNBOUND"}
newServer {address="127.0.0.1:5302",name="PowerDNS Rec"}
newServer {address="127.0.0.1:5303",name="PowerDNS Auth",pool="auth"}
newServer {address="127.0.0.1:5304",name="NSD",pool="auth"}
newServer {address="127.0.0.1:5305",name="UNBOUND2",pool="amp"}

-----------------------------------------------------------------------------
-- Management
-----------------------------------------------------------------------------
controlSocket("127.0.0.1")

-----------------------------------------------------------------------------
-- WebControll
-----------------------------------------------------------------------------
webserver("0.0.0.0:8083","dnsdist")

-----------------------------------------------------------------------------
-- Local
-----------------------------------------------------------------------------
addLocal("0.0.0.0:53")

-----------------------------------------------------------------------------
-- AnyTCP
-----------------------------------------------------------------------------
addAnyTCRule()

-----------------------------------------------------------------------------
-- ACL
-----------------------------------------------------------------------------
-- addACL("10.0.0.0/8")     -- Default
-- addACL("172.16.0.0/12")  -- Default
-- addACL("192.168.0.0/16") -- Default
-- addACL("127.0.0.0/8")    -- Default
-- addACL("100.64.0.0/10")  -- Default
-- addACL("169.254.0.0/16") -- Default
-- addACL("::1/128")        -- Default
-- addACL("fc00::/7")       -- Default
-- addACL("fe80::/10")      -- Default
addACL("0.0.0.0/0")         -- OpenResolver

-----------------------------------------------------------------------------
-- RR
-----------------------------------------------------------------------------
-- counter=0
-- function RR(servers, dq)
--      counter=counter+1
--      return servers[1+(counter % #servers)]
-- end
-- setServerPolicyLua("RR", RR)

-----------------------------------------------------------------------------
-- SplitAuth
-----------------------------------------------------------------------------
-- function splitAuth(servers, dq)
--      if(dq.dh:getRD() == false)
--      then
--              return leastOutstanding.policy(getPoolServers("auth"), dq)
--      else
--              return leastOutstanding.policy(servers, dq)
--      end
-- end
-- setServerPolicyLua("splitAuth", splitAuth)

-----------------------------------------------------------------------------
-- ChangePool
-----------------------------------------------------------------------------
-- function privateA(dq)
--      return DNSAction.Pool, "google"
-- end
-- addLuaAction("10.0.0.0/8", privateA)

-- function privateB(dq)
--      return DNSAction.Pool, "norton"
-- end
-- addLuaAction("172.16.0.0/12", privateB)

-- function privateC(dq)
--      return DNSAction.Pool, "comodo"
-- end
-- addLuaAction("192.168.0.0/16", privateC)

-----------------------------------------------------------------------------
-- PoolRule
-----------------------------------------------------------------------------
addPoolRule("yahoo.co.jp.","google")
addPoolRule("nicovideo.jp.","open")
addPoolRule("microsoft.com.","norton")
addPoolRule("baidu.com.","baidu")
addPoolRule("yahoo.com.","comodo")
addPoolRule("hichina.com","alidns")
addPoolRule({"alibaba.com","alidns.com"},"alidns")

addPoolRule("10.0.0.0/8", "google")
addPoolRule("172.16.0.0/12", "norton")
addPoolRule("192.168.22.0/24", "comodo")
addPoolRule({"192.168.23.0/24","192.168.24.0/24"}, "comodo")

-----------------------------------------------------------------------------
-- QPSPoolRule
-----------------------------------------------------------------------------
addQPSPoolRule("jpnic.jp",1,"google")
addQPSPoolRule({"jpnic.jp","qiita.com"},1,"google")
addQPSPoolRule("192.168.19.0/24",1,"google")
addQPSPoolRule({"192.168.20.0/24","192.168.21.0/24"},1,"google")

-----------------------------------------------------------------------------
-- SplitAuth with roundrobin
-----------------------------------------------------------------------------
function splitAuthRR(servers, dq)
        priority=1
        if(dq.dh:getRD() == false)
        then
                authlogging(dq, priority)
                return roundrobin.policy(getPoolServers("auth"), dq)
        else
                cachelogging(dq, priority)
                return roundrobin.policy(servers, dq)
        end
end
setServerPolicyLua("splitAuthRR", splitAuthRR)

-----------------------------------------------------------------------------
-- Logging
-----------------------------------------------------------------------------
function authlogging(dq,priority)
        logging("AUTH",dq,priority)
end

function cachelogging(dq,priority)
        logging("CACHE",dq,priority)
end

function amplogging(dq)
        priority=2
        logging("AMP",dq,priority)
        return DNSAction.None, ""
end

function ddoslogging(dq)
        priority=2
        logging("DDOS",dq,priority)
        return DNSAction.None, ""
end

function dnssearchlogging(dq)
        priority=2
        logging("SEARCH",dq,priority)
        return DNSAction.None, ""
end

function versionlogging(dq)
        priority=2
        logging("VERSION",dq,priority)
        return DNSAction.None, ""
end

function logging(logtype,dq,priority)
        log=string.format("TYPE:%s TCP:%s SIZE:%s LEN:%s LOCAL:%s IP:%s QNAME:%s QTYPE:%s RD:%s CD:%s", logtype, tostring(dq.tcp), tostring(dq.size), tostring(dq.len), dq.localaddr:tostring(), dq.remoteaddr:tostring(), dq.qname:tostring(), dq.qtype, tostring(dq.dh:getRD()), tostring(dq.dh:getCD()))
        if(priority==1)
        then
                infolog(log)
        elseif(priority==2)
        then
                warnlog(log)
        elseif(priority==3)
        then
                errlog(log)
        end
end

function DropLog(dq)
        priority=2
        logging("DROP", dq,priority)
        return DNSAction.Drop()
end
function DropNoLog(dq)
        return DNSAction.Drop()
end

function NxdomainLog(dq)
        priority=2
        logging("Nxdomain", dq,priority)
        return DNSAction.Nxdomain()
end
function NxdomainNoLog(dq)
        return DNSAction.Nxdomain()
end

-----------------------------------------------------------------------------
-- AMP Drop
-----------------------------------------------------------------------------
addAction(AndRule{RegexRule("example.com$"),QTypeRule(255)}, DropAction())              -- DROP
addAction(AndRule{RegexRule("example.org$"),QTypeRule(255)}, NoRecurseAction())         -- NOERROR

addAction(AndRule{makeRule("cpsc.gov"),QTypeRule(255)}, DropAction())
addAction(AndRule{RegexRule("lifemotodrive.ru$"),QTypeRule(255)}, DropAction())

addAction(AndRule{RegexRule("httrack.com$"),QTypeRule(255)}, TCAction())

-- addAction(AndRule{RegexRule("example.cn$"),QTypeRule(255)}, TCAction())              -- NOERROR
-- addAction(RegexRule("example.cn$"),DelayAction(1000))
-- addAction(RegexRule("example.cn$"),SpoofAction("127.0.0.1"))
-- addAction(RegexRule("example.cn$"),NoRecurseAction())
-- addAction(RegexRule("example.cn$"),DisableValidationAction())
-- addAction(RegexRule("example.cn$"),LogAction("aaa"))

-----------------------------------------------------------------------------
-- Randum Drop
-----------------------------------------------------------------------------
addAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.drop.example.co.jp$"), DropAction())          -- DROP
addAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.norec.example.co.jp$"), NoRecurseAction())    -- NOERROR
addAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.tc.example.co.jp$"), TCAction())              -- NOERROR
addAction("centos.org", TCAction())
addAction({"blogcms.jp","livedoor.com"}, TCAction())
addAction("192.168.25.0/24", TCAction())
addAction({"192.168.26.0/24","192.168.27.0/24"}, TCAction())
addLuaAction(RegexRule("[0-9a-zA-Z.\-]{4,}\\.log.example.co.jp$"), ddoslogging)         -- LOGGING


addLuaAction("shadowserver.org",dnssearchlogging)                                       -- OpenResolverCheck
addLuaAction("openresolvertest.net",dnssearchlogging)                                   -- OpenResolverCheck

addLuaAction("version.bind",versionlogging)             -- VersionCheck

addAction("myxns.cn",TCAction())
addAction("ffdns.net",TCAction())
addAction("198.48.92.0/24",TCAction())
-----------------------------------------------------------------------------
-- DomainBlock
-----------------------------------------------------------------------------
addDomainBlock("example.net")

-----------------------------------------------------------------------------
-- DomainSpoof
-----------------------------------------------------------------------------
addDomainSpoof("impress.co.jp","127.0.0.1")
addDomainSpoof("c.afekv.com","0.0.0.0")

-----------------------------------------------------------------------------
-- DomainCNAMESpoof
-----------------------------------------------------------------------------
addDomainCNAMESpoof("mainichi.com","asahi.com")

-----------------------------------------------------------------------------
-- DisableValidation
-----------------------------------------------------------------------------
addDisableValidationRule("softbank.co.jp")
addDisableValidationRule({"softbank.jp","moba-navi.jp"})
addDisableValidationRule("192.168.16.0/24")
addDisableValidationRule({"192.168.17.0/24","192.168.18.0/24"})

-----------------------------------------------------------------------------
-- NoRecurse
-----------------------------------------------------------------------------
addNoRecurseRule("www.jprs.jp")
addNoRecurseRule({"srad.jp","dnsops.jp"})
addNoRecurseRule("192.168.10.0/24")
addNoRecurseRule({"192.168.11.0/24","192.168.12.0/24"})

-----------------------------------------------------------------------------
-- DropAction
-----------------------------------------------------------------------------
addAction("www.gmo.com",DropAction())
addAction({"www.value-domain.com","www.gmo.jp"},DropAction())
addAction("192.168.13.0/24",DropAction())
addAction({"192.168.14.0/24","192.168.15.0/24"},DropAction())

-----------------------------------------------------------------------------
-- Delay
-----------------------------------------------------------------------------
addDelay("hatenadiary.com",1000)
addDelay({"nikkeibp.co.jp", "hatena.ne.jp"}, 1000)
addDelay("192.168.2.0/24", 1000)
addDelay({"192.168.3.0/24","192.168.4.0/24"}, 1000)
addDelay(AndRule{RegexRule("nasa.com$"),QTypeRule(255)},1000)

-----------------------------------------------------------------------------
-- QPSLimit
-----------------------------------------------------------------------------
addQPSLimit("hp.com",10)
addQPSLimit({"php.net","twitter.com"},10)
addQPSLimit("153.126.167.156",100000)
addQPSLimit("192.168.5.0/24", 10)
addQPSLimit({"192.168.6.0/24","192.168.7.0/24","192.168.8.0/24"}, 10)
addQPSLimit("0.0.0.0/0",10)
